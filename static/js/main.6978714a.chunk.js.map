{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","utils/Api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Footer","api","config","this","_url","url","_headers","headers","data","fetch","method","body","JSON","stringify","avatar","then","res","ok","json","Promise","reject","status","name","nameInput","about","jobInput","link","cardId","Card","card","onCardClick","type","onClick","likes","length","Main","onEditAvatar","onEditProfile","onAddPlace","React","useState","userAvatar","setUserAvatar","userName","setUserName","userDescription","setUserDescription","cards","setCards","useEffect","all","getUserInfoFromServer","catch","err","console","error","getCardsInformation","map","PopupWithForm","isOpen","onClose","title","submitButton","popupName","formName","children","noValidate","ImagePopup","App","isEditAvatarPopupOpen","setIsOpenPopupAvatar","isEditProfilePopupOpen","setIsOpenPopupProfile","isAddPlacePopupOpen","setIsOpenPopupPlace","selectedCard","setSelectedCard","closeAllPopups","props","required","id","minLength","maxLength","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6978714a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n        <img className=\"logo\" src={logo} alt=\"изображение лого\" /> \n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\"> \n        <p className=\"footer__copyright\">&copy;&#160;2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","class Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    editProfileAvatar(data) {\n        return fetch(`${this._url}${'users/me/avatar'}`, {\n            method: \"PATCH\",\n            headers: this._headers, \n            body: JSON.stringify({\n                avatar: data.avatar\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getUserInfoFromServer() {\n        return fetch(`${this._url}${'users/me'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getAvatarFromServer() {\n        return fetch(`${this._url}${'users/me/avatar'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    setUserInfoOnServer(data) {\n        return fetch(`${this._url}${'users/me'}`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.nameInput,\n                about: data.jobInput\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    getCardsInformation() {\n        return fetch(`${this._url}${'cards'}`, {\n            method: \"GET\",\n            headers: this._headers        \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    addCards(data) {\n        return fetch(`${this._url}${'cards'}`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })       \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}${'cards/'}${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,   \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n\n    makeLikeCard(cardId) {\n        return fetch(`${this._url}${'cards/likes/'}${cardId}`, {\n            method: \"PUT\",\n            headers: this._headers      \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n    removeLikeCard(cardId) {\n        return fetch(`${this._url}${'cards/likes/'}${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers      \n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            \n            return Promise.reject(`Ошибка: ${res.status}`);\n        })\n    }\n\n}\n\n\n\nconst api = new Api({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-18/\",\n    headers: {\n        \"Authorization\": \"6b4f0e7a-6b81-4fab-971b-4da07f00c7c0\",\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\n\nfunction Card({ card, onCardClick }) {\n\n    \n\n    function handleClick() {\n        onCardClick(card);\n    } \n\n    return (\n        <div className=\"photo-grid__item\">\n        <button type=\"button\" className=\"photo-grid__delete-btn\"></button>\n        <img className=\"photo-grid__image\" src={card.link} alt=\"фото\" onClick={handleClick} />\n            <div className=\"photo-grid__rectangle\">\n                <h2 className=\"photo-grid__title\">{card.name}</h2>\n                <div className=\"photo-grid__like-place\">\n                    <button type=\"button\" className=\"photo-grid__like-btn\"></button>\n                    <span className=\"photo-grid__like-count\">{card.likes.length}</span>\n                </div>\n            </div> \n        </div>    \n    );\n}\n\nexport default Card;","import React from 'react';\nimport api from '../utils/Api.js';\nimport Card from '../components/Card'\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick }) {\n    \n    const [userAvatar, setUserAvatar] = React.useState(\"\");\n    const [userName, setUserName] = React.useState(\"\");\n    const [userDescription, setUserDescription] = React.useState(\"\");\n\n    const [cards, setCards] = React.useState([])\n\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfoFromServer()])\n          .then(res => {\n            setUserAvatar(res[0].avatar);\n            setUserName(res[0].name);\n            setUserDescription(res[0].about);\n          })\n          .catch((err) => console.error(err));\n      }, []);\n   \n    React.useEffect(() => {\n        Promise.all([api.getCardsInformation()])\n          .then(res => {\n            setCards(res[0]);\n          })\n          .catch((err) => console.error(err));\n        }, []); \n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                 <div className=\"profile__avatar-container\" onClick={onEditAvatar}>                    \n                    <img className=\"profile__avatar-icon\" src={userAvatar} alt=\"фото аватара\" />\n                </div>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__title\">{userName}</h1>\n                    <p className=\"profile__subtitle\">{userDescription}</p>\n                    <button type=\"button\" className=\"profile__edit-btn\" onClick={onEditProfile}></button>\n                </div>\n                <button type=\"button\" className=\"profile__add-btn\" onClick={onAddPlace}></button>\n            </section>\n            <section className=\"photo-grid\">\n                { \n                    cards.map((card) => (\n                        <Card \n                            card={card}\n                            onCardClick={onCardClick}\n                        />))           \n                }\n            </section>\n        </main>       \n    );\n\n}\n\nexport default Main;","import React from 'react';\n\nfunction PopupWithForm({ isOpen, onClose, title, submitButton, popupName, formName, children  }) {\n  return (\n\n    <div className={`popup popup__${popupName} ${isOpen && \"popup_opened\"}`}>\n        <div className=\"popup__container\">\n            <button type=\"button\" className=\"popup__close-btn\" onClick={onClose}></button> \n            <div className=\"popup__content\">\n                <h2 className=\"popup__title\">{title}</h2>\n                <form name=\"edit\" method=\"POST\" className={`popup__form popup__${formName}`} noValidate>\n                    {children}\n                    <button type=\"submit\" className=\"popup__save-btn\" onClick={submitButton}>Сохранить</button> \n                </form>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n\n    return (\n        <div className={`popup popup__photo ${card ? \"popup_opened\" : \"\"}`}>\n            <div className=\"popup__container\">\n                <button type=\"button\" className=\"popup__close-btn\" onClick={onClose}></button> \n                <img className=\"popup__photo-fullscreen\" src={card?.link} alt=\"фото\" />\n                <h2 className=\"popup__photo-title\">{card?.name}</h2>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport '../index.js';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Main from '../components/Main';\nimport PopupWithForm from '../components/PopupWithForm';\nimport ImagePopup from '../components/ImagePopup';\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsOpenPopupAvatar] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsOpenPopupProfile] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsOpenPopupPlace] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    \n\n    function handleEditAvatarClick() {\n        setIsOpenPopupAvatar(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsOpenPopupPlace(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsOpenPopupProfile(true);\n    }\n\n    function handleCardClick(props) {        \n        setSelectedCard(props);\n    }\n\n    function closeAllPopups() {\n        setIsOpenPopupAvatar(false);\n        setIsOpenPopupProfile(false);\n        setIsOpenPopupPlace(false);\n        setSelectedCard(false);\n    }\n\n    return (\n        <div className=\"page\">\n            <Header />    \n            <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n            />  \n            <Footer />\n            <PopupWithForm\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                title=\"Обновить аватар\"\n                popupName=\"avatar\"\n                formName=\"form_update\"\n            >\n                <input \n                    className=\"popup__input popup__input_link-avatar popup__input_link\" \n                    type=\"url\" \n                    name=\"avatar\" \n                    required \n                />   \n            </PopupWithForm>\n\n            <PopupWithForm\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                title=\"Редактировать профиль\"\n                popupName=\"edit\"\n                formName=\"form_edit\"\n            >\n                <div className=\"popup__field\">\n                    <input \n                    type=\"text\" \n                    id=\"empty-name-input\"\n                    name=\"nameInput\" \n                    className=\"popup__input popup__input_name\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"40\" />\n                    <span id=\"empty-name-input-error\"></span> \n                </div>\n                <div className=\"popup__field\">\n                    <input \n                        type=\"text\" \n                        id=\"empty-job-input\" \n                        name=\"jobInput\" \n                        className=\"popup__input popup__input_job\" \n                        required minLength=\"2\" \n                        maxLength=\"200\" />\n                    <span id=\"empty-job-input-error\"></span>  \n                </div>\n            </PopupWithForm>\n\n            <PopupWithForm\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                title=\"Новое место\"\n                popupName=\"update\"\n                formName=\"form_update\"\n            >\n                <div className=\"popup__field\">\n                    <input \n                    type=\"text\" \n                    id=\"empty-title-input\" \n                    name=\"name\" \n                    placeholder=\"Название\" \n                    className=\"popup__input popup__input_title\" \n                    required \n                    minLength=\"2\" \n                    maxLength=\"30\" />\n                    <span id=\"empty-title-input-error\"></span> \n                </div>\n                <div className=\"popup__field\">\n                    <input \n                    type=\"url\" \n                    id=\"empty-link-input\" \n                    name=\"link\" \n                    placeholder=\"Ссылка на картинку\" \n                    className=\"popup__input popup__input_link\" \n                    required />   \n                    <span id=\"empty-link-input-error\"></span> \n                </div> \n            </PopupWithForm>\n\n            <ImagePopup\n                card={selectedCard}\n                onClose={closeAllPopups}\n            />\n\n            <div className=\"popup popup__submit\">\n                <div className=\"popup__container\">\n                    <button type=\"button\" className=\"popup__close-btn\"></button> \n                    <div className=\"popup__content\">\n                        <h2 className=\"popup__title popup__title_submit\">Вы уверены?</h2>\n                        <form name=\"submit\" className=\"popup__form popup__form_update\">\n                            <button type=\"submit\" className=\"popup__save-btn popup__save-btn_confirm\">Да</button> \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}